 –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ —á–µ—Ä–µ–∑ Convert
–ú–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å Convert –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏.

‚úÖ –ü—Ä–∏–º–µ—Ä—ã:

csharp
–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å
–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
string strNum = "123";
int num = Convert.ToInt32(strNum); // string ‚Üí int
csharp
–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å
–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
double value = 9.99;
int roundedValue = Convert.ToInt32(value); // –û–∫—Ä—É–≥–ª–∏—Ç (10)
csharp
–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å
–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
bool flag = true;
int boolToInt = Convert.ToInt32(flag); // true ‚Üí 1, false ‚Üí 0
4. –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ —Å—Ç—Ä–æ–∫ (string) –≤ —á–∏—Å–ª–∞
üîπ int.Parse() –∏ float.Parse()

csharp
–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å
–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
string str = "100";
int num = int.Parse(str); // OK, –µ—Å–ª–∏ —Å—Ç—Ä–æ–∫–∞ ‚Äî —á–∏—Å–ª–æ
üîπ TryParse() (–±–µ–∑–æ–ø–∞—Å–Ω–æ–µ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ)

csharp
–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å
–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
string input = "123";
if (int.TryParse(input, out int result))
{
    Debug.Log(result); // 123
}
else
{
    Debug.Log("–û—à–∏–±–∫–∞ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏!");
}
–ï—Å–ª–∏ –≤ input –∑–∞–ø–∏—Å–∞–Ω–æ "abc", TryParse –≤–µ—Ä–Ω–µ—Ç false –∏ –Ω–µ –≤—ã–∑–æ–≤–µ—Ç –æ—à–∏–±–∫—É.

5. –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–æ–≤ (Casting)
üîπ –ü—Ä–∏–≤–µ–¥–µ–Ω–∏–µ –∫–ª–∞—Å—Å–æ–≤
–ï—Å–ª–∏ –æ–¥–∏–Ω –∫–ª–∞—Å—Å –Ω–∞—Å–ª–µ–¥—É–µ—Ç—Å—è –æ—Ç –¥—Ä—É–≥–æ–≥–æ, –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å as –∏ is:

csharp
–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å
–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
class Animal { }
class Dog : Animal { }

Animal a = new Dog();
Dog d = a as Dog; // –ü—Ä–∏–≤–µ–¥–µ–Ω–∏–µ —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π (–≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç null, –µ—Å–ª–∏ –Ω–µ –ø–æ–¥—Ö–æ–¥–∏—Ç)
if (d != null) Debug.Log("–≠—Ç–æ —Å–æ–±–∞–∫–∞!");
–¢–∞–∫–∂–µ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å is:

csharp
–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å
–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
if (a is Dog)
{
    Dog d2 = (Dog)a;
}